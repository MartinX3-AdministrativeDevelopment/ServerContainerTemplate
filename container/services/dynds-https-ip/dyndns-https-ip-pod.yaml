apiVersion: v1
kind: Pod
metadata:
  name: dyndns
spec:
  automountServiceAccountToken: false
  containers:
    - name: dnsmasq
      image: docker.io/4km3/dnsmasq:2.90-r3@sha256:d78d06da71b457d35b9841781639760adbf627f03941504caddbd57fedab22b8
      imagePullPolicy: Always
      resources:
        limits:
          cpu: 100m
          ephemeral-storage: 100Mi
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - CAP_SETGID
            - CAP_SETUID
            - CAP_NET_BIND_SERVICE
            - NET_ADMIN
          drop:
            - ALL
        privileged: false
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
    - name: https
      image: ghcr.io/linuxserver/swag:5.0.0@sha256:2ca01d2369cf98bf9182f3553ef59a4e1d1b4e30d66b2531b0b07a781cb15606
      imagePullPolicy: Always
      env:
        - name: DUCKDNSTOKEN
          valueFrom:
            secretKeyRef:
              name: dyndns-https-ip-secret
              key: DNSTOKEN
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: SUBDOMAINS
          value: wildcard
        - name: TZ
          value: Europe/Berlin
        - name: URL
          valueFrom:
            secretKeyRef:
              name: dyndns-https-ip-secret
              key: URL
        - name: VALIDATION
          value: duckdns
      ports:
        - containerPort: 80
          hostPort: 80
          name: http
          protocol: TCP
        - containerPort: 443
          hostPort: 443
          name: https
          protocol: TCP
      resources:
        limits:
          cpu: 100m
          ephemeral-storage: 100Mi
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - CAP_CHOWN
            - CAP_DAC_OVERRIDE
            - CAP_FOWNER
            - CAP_NET_BIND_SERVICE
            - CAP_SETGID
            - CAP_SETUID
            - NET_ADMIN
          drop:
            - ALL
        privileged: false
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      volumeMounts:
        - name: dyndns-https-volume
          mountPath: /config
        - name: dyndns-https-configmap-volume
          mountPath: /config/nginx/site-confs/www.conf
          subPath: www.conf
    - name: ip
      image: ghcr.io/linuxserver/duckdns:latest@sha256:efdc783b708b3ae34b8e8714959c95fe516659bc080153f4e8087e56e910ae51
      imagePullPolicy: Always
      env:
        - name: TOKEN
          valueFrom:
            secretKeyRef:
              name: dyndns-https-ip-secret
              key: DNSTOKEN
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: SUBDOMAINS
          valueFrom:
            secretKeyRef:
              name: dyndns-https-ip-secret
              key: SUBDOMAINS
        - name: TZ
          value: Europe/Berlin
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - CAP_CHOWN
            - CAP_SETGID
            - CAP_SETUID
          drop:
            - ALL
        privileged: false
        runAsGroup: 0
        runAsNonRoot: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
  restartPolicy: OnFailure
  volumes:
    - name: dyndns-https-volume
      persistentVolumeClaim:
        claimName: dyndns-https-pvc
    - name: dyndns-https-configmap-volume
      configMap:
        name: dyndns-https-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dyndns-https-configmap
data:
  www.conf: |
    # /config/nginx/site-confs/www.conf
    # redirect 3rd level domain to www 4th level domain
    # needed for duckdns wildcard certificates
    # only works with http. with https you'll need a valid certificate.
    
    server {
      server_name exploding-hamster.duckdns.org;
    
      return 301 https://www.$server_name$request_uri;
    }
