apiVersion: v1
kind: Pod
metadata:
  name: ci
  labels:
    io.containers.autoupdate: registry
spec:
  restartPolicy: on-failure
  containers:
    - name: drone.io-server
      image: docker.io/drone/drone:2.16
      imagePullPolicy: always
      env:
        - name: DRONE_GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: ci-secret
              key: DRONE_GITHUB_CLIENT_ID
        - name: DRONE_GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: ci-secret
              key: DRONE_GITHUB_CLIENT_SECRET
        - name: DRONE_RPC_SECRET
          valueFrom:
            secretKeyRef:
              name: ci-secret
              key: DRONE_RPC_SECRET
        - name: DRONE_SERVER_HOST
          value: "drone.exploding-hamster.duckdns.org"
        - name: DRONE_SERVER_PROTO
          value: "https"
        - name: DRONE_USER_FILTER
          value: "MartinX3"
      resources:
        requests:
          cpu: "10m"
          memory: "128Mi"
        limits:
          cpu: "100m"
          memory: "1Gi"
      volumeMounts:
        - name: ci-drone.io-server-data-volume
          mountPath: /data
  volumes:
    - name: ci-drone.io-server-data-volume
      persistentVolumeClaim:
        claimName: ci-drone.io-server-data-pvc
---
apiVersion: v1
kind: Pod
metadata:
  name: ci
  labels:
    io.containers.autoupdate: registry
spec:
  restartPolicy: on-failure
  containers:
    - name: drone.io-runner
      image: docker.io/drone/drone-runner-docker:1.8
      imagePullPolicy: always
      env:
        - name: DRONE_RPC_SECRET
          valueFrom:
            secretKeyRef:
              name: ci-secret
              key: DRONE_RPC_SECRET
        - name: DRONE_RUNNER_CAPACITY
          value: 1
        - name: DRONE_SERVER_HOST
          value: "ci"
        - name: DRONE_SERVER_PROTO
          value: "http"
      resources:
        requests:
          cpu: "10m"
          memory: "128Mi"
        limits:
          cpu: "900m"
          memory: "24Gi"
      volumeMounts:
        - name: docker.sock-hostpath
          mountPath: /var/run/docker.sock
  volumes:
    - name: docker.sock-hostpath
      hostPath:
        path: /run/user/1000/podman/podman.sock